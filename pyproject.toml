[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

# For setuptools: https://packaging.python.org/en/latest/specifications/declaring-project-metadata/
[project]
name = "aqua"
dynamic = ["version"]
authors = [ # AQUA core team reported here
    {name = "The AQUA team", email = "p.davini@isac.cnr.it"},
    {name = "Paolo Davini", email = "p.davini@isac.cnr.it"},
    {name = "Matteo Nurisso", email = "m.nurisso@isac.cnr.it"},
    {name = "Silvia Caprioli", email = "silvia.caprioli@polito.it"},
    {name = "Jost von Hardenberg", email = "jost.hardenberg@polito.it"},
    {name = "Natalia Nazarova", email = "natalia.nazarova@polito.it"},
    {name = "Supriyo Ghosh", email = "supriyo.ghosh@bsc.es"},
    {name = "Maqsood Mubarak Rajput", email = "maqsoodmubarak.rajput@awi.de"}
]
description = "AQUA; a model evaluation framework for high-resolution climate model simulations"
readme = "README.md"
keywords = ["climate", "modeling", "diagnostics", "high-resolution"]
license = {file = "LICENSE"}
requires-python = ">=3.10"
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Science/Research",
    "Operating System :: POSIX :: Linux",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython"
]
dependencies = [
    "boto3",
    "cartopy==0.24.1",
    "cfgrib",
    "dask",
    "eccodes==2.41.0",
    "docker",
    "filelock",
    "gcsfs", # Google Cloud Storage File System
    "pandas",
    "intake==0.7.0", # Version 2 is a major refactor still in development
    "intake-esm",
    "intake-xarray",
    "jinja2",
    "matplotlib",
    "metpy",
    "numpy",
    "pydantic",
    "pypdf",
    "pyYAML",
    "ruamel.yaml",
    "smmregrid==0.1.3",
    #"smmregrid @ git+https://github.com/jhardenberg/smmregrid.git",
    "sparse",
    "xarray>=2025.01.2", # Version 2025.01.2 is the first version introducing the CFDatetimeCoder
    "kerchunk",
    "h5py>=3.12.1", #specific github pin to avoid installation of binaries
    "fastparquet",
    "ECmean4==0.1.15",
    "pyfdb==0.1.2",
    "gsv-interface==2.13.1",
    "zarr"
]

[project.optional-dependencies]
docs = [
    "sphinx",
    "sphinx-rtd-theme"
]
notebooks = [
    "ipykernel",
    "healpy"
]
tests = [
    "pytest",
    "pytest-cov",
    "coverage",
    "cdo"
]
all = [
    "aqua[docs]",
    "aqua[notebooks]",
    "aqua[tests]"
]

[project.scripts]
aqua = "aqua.cli.main:main"

[project.urls]
homepage = "https://github.com/DestinE-Climate-DT/AQUA/"
documentation = "https://aqua.readthedocs.io/en/latest/index.html"
repository = "https://github.com/DestinE-Climate-DT/AQUA/"
issues = "https://github.com/DestinE-Climate-DT/AQUA/issues/"

[tool.setuptools.package-data]
platforms = ["any"]

[tool.setuptools.package-dir]
"aqua" = "src/aqua"
"aqua.diagnostics" = "src/aqua_diagnostics"

[tool.setuptools.dynamic]
version = {attr = "aqua.version.__version__"}

[tool.pytest.ini_options]
# verbose to have full test, run coverage on src folder and use pyproject as a configuration file
addopts = "--durations=10 -v --cov=aqua" 
testpaths = [
    "tests"
]
markers = [
    "aqua: mark test as AQUA framework",
    "slow: tests which are slow",
    "sbatch: tests which require sbatch",
    "graphics: tests which deal with graphics",
    "gsv: mark test that requires ECMWF FDB libraries",
    "diagnostics: single marker for all diagnostics",
    "catgen: mark test for catalog generator",
    "ensemble: pytest for ensemble diagnostic"
]

[tool.coverage.run]
branch = true
command_line = '-m pytest tests'
source = ["src/aqua"]
omit = [
    "tests/*", 
    "**/__init__.py",
    "src/aqua_diagnostics/dummy"
    ]

