#!/bin/bash
#SBATCH --job-name={{ job_name }}
#SBATCH --partition={{ partition }}
#SBATCH --account={{ account }}
#SBATCH --nodes={{ nodes }}
#SBATCH --ntasks-per-node={{ ntasks_per_node }}
#SBATCH --time={{ time }}
#SBATCH --error={{ logdir_error }}/{{ error }}
#SBATCH --output={{ logdir_output }}/{{ output }}

model={{ model }}
exp={{ exp }}
source={{ source }}
catalog={{ catalog }}

export OUTDIR={{ outdir }}{{ fresh }}
export AQUA={{ aquadir }}

mkdir -p $OUTDIR
cd $OUTDIR

unset SINGULARITY_BIND  # Lumi specific fix for singularity

if [[ "{{ nativeaqua }}" == "true" ]]; then
    if [[ "{{ push }}" == "false" ]]; then
        if [[ "{{ ensemble }}" == "true" ]]; then
            aqua analysis -l debug -c $catalog -m $model -e $exp --realization {{ realization }} -s $source -d $OUTDIR {{ parallel }}
        else
            aqua analysis -l debug -c $catalog -m $model -e $exp -s $source -d $OUTDIR {{ parallel }}
        fi
    else
        if [[ "{{ ensemble }}" == "true" ]]; then
            bash $AQUA/cli/aqua-web/push_analysis.sh $OUTDIR {{ explist }}
        else
            bash $AQUA/cli/aqua-web/push_analysis.sh -n $OUTDIR {{ explist }}
        fi
    fi
else
    bash $AQUA/cli/aqua-container/load-aqua-container.sh {{ machine }} <<EOF
#!/bin/bash
if [[ "{{ push }}" == "false" ]]; then
    if [[ "{{ ensemble }}" == "true" ]]; then
        aqua analysis -l debug -c $catalog -m $model -e $exp --realization {{ realization }} -s $source -d $OUTDIR {{ parallel }}
    else
        aqua analysis -l debug -c $catalog -m $model -e $exp -s $source -d $OUTDIR {{ parallel }}
    fi
else
    if [[ "{{ ensemble }}" == "true" ]]; then
        bash $AQUA/cli/aqua-web/push_analysis.sh $OUTDIR {{ explist }}
    else
        bash $AQUA/cli/aqua-web/push_analysis.sh -n $OUTDIR {{ explist }}
    fi
EOF
fi
